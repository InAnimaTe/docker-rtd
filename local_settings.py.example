# Setting Overrides
# See readthedocs/settings/*.py for settings that need to be modified
import os

# Set this to the root domain where this RTD installation will be running
PRODUCTION_DOMAIN = os.getenv('RTD_PRODUCTION_DOMAIN', 'localhost:8000')

# Set the Slumber API host
SLUMBER_API_HOST = os.getenv('RTD_SLUMBER_API_HOST', "http://" + PRODUCTION_DOMAIN)
SLUMBER_USERNAME = 'admin'
SLUMBER_PASSWORD = 'admin'

# Turn off email verification
ACCOUNT_EMAIL_VERIFICATION = 'none'

# Enable private Git doc repositories
ALLOW_PRIVATE_REPOS = True

# Disable email for an account
ACCOUNT_EMAIL_REQUIRED = False

# Don't bother caring about email for auth
ACCOUNT_AUTHENTICATION_METHOD = "username"

# Define where are our database lives
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join("/persistent", 'dev.db'),
    }
}

# Reset the django logging to be sutiable for Docker use, by having everything
# go to stdout, and also allow us to set them to DEBUG if we want
LOG_FORMAT = "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s"
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': LOG_FORMAT,
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'console': {
            'level': os.getenv('LOG_LEVEL', 'INFO'),
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': os.getenv('LOG_LEVEL', 'INFO'),
        },
    }
}

# Configure the services that are setup through docker-compose.
ES_HOSTS = ['elasticsearch:9200']
BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
CELERY_ALWAYS_EAGER = True
